<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.codatics</groupId>
	<artifactId>common</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>



	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.3.2.RELEASE</spring.version>
		<springsecurity.version>4.1.2.RELEASE</springsecurity.version>
		<hibernate.version>5.2.2.Final</hibernate.version>
		<slf4j.version>1.7.13</slf4j.version>
		<java.version>1.7</java.version>
		<junit.version>4.8.1</junit.version>
	</properties>


	<name>common</name>

	<dependencies>

		<!-- https://mvnrepository.com/artifact/biz.source_code/base64coder -->
		<dependency>
			<groupId>biz.source_code</groupId>
			<artifactId>base64coder</artifactId>
			<version>2010-12-19</version>
		</dependency>


		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- Unit Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.slf4j</groupId> -->
		<!-- <artifactId>slf4j-log4j12</artifactId> -->
		<!-- <version>${slf4j.version}</version> -->
		<!-- </dependency> -->

		<!--Spring -->
		<!-- provide DI injection -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-context</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- <exclusions> -->
		<!-- Exclude Commons Logging in favor of SLF4j -->
		<!-- <exclusion> -->
		<!-- <groupId>commons-logging</groupId> -->
		<!-- <artifactId>commons-logging</artifactId> -->
		<!-- </exclusion> -->
		<!-- </exclusions> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-tx</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-orm</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-jdbc</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-aspects</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- </dependency> -->

		<!-- CGLIB is a powerful, high performance code generation library. It 
			is widely used behind the scenes in proxy-based Aspect Oriented Programming 
			(AOP) frameworks, such as Spring AOP and dynaop, to provide method interceptions. -->
		<!--In computing, aspect-oriented programming (AOP) is a programming paradigm 
			that aims to increase modularity by allowing the separation of cross-cutting 
			concerns. It does so by adding additional behavior to existing code (an advice) 
			without modifying the code itself, instead separately specifying which code 
			is modified via a "pointcut" specification, such as "log all function calls 
			when the function's name begins with 'set'". This allows behaviors that are 
			not central to the business logic (such as logging) to be added to a program 
			without cluttering the code core to the functionality. AOP forms a basis 
			for aspect-oriented software development. -->


		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>





	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.0.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<debug>true</debug>
						<debuglevel>lines,vars,source</debuglevel>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>



</project>